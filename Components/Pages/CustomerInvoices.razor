@rendermode InteractiveServer
@page "/customer/{customerId:int}/invoices"
@using Invoqs.Components.UI
@using Invoqs.Models

<PageTitle>Customer Invoices - @customerName - Invoqs</PageTitle>

<Navbar CurrentUser="@currentUser" OnLogout="HandleLogout" />

<div class="container-fluid py-4">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/dashboard" class="text-decoration-none">Dashboard</a></li>
            <li class="breadcrumb-item"><a href="/customers" class="text-decoration-none">Customers</a></li>
            <li class="breadcrumb-item"><a href="/customer/@CustomerId" class="text-decoration-none">@customerName</a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">Invoices</li>
        </ol>
    </nav>

    <!-- Page Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center flex-wrap">
                <div>
                    <h2 class="text-primary mb-1">Invoices for @customerName</h2>
                    <p class="text-muted mb-0">@customerInvoices.Count total invoices • £@totalValue.ToString("N2")
                        total value</p>
                </div>
                <div class="d-flex gap-2 mt-2 mt-md-0">
                    <button class="btn btn-outline-secondary" @onclick="RefreshData">
                        <i class="bi bi-arrow-clockwise me-1"></i>
                        Refresh
                    </button>
                    <button class="btn btn-outline-secondary"
                        @onclick="@(() => Navigation.NavigateTo($"/customer/{CustomerId}"))">
                        <i class="bi bi-arrow-left me-1"></i>
                        Back to Customer
                    </button>
                    <a href="/customer/@CustomerId/invoice/new?returnUrl=@Uri.EscapeDataString(Navigation.Uri)"
                        class="btn btn-primary">
                        <i class="bi bi-plus-lg me-1"></i>
                        Create Invoice
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Customer Info Card -->
    @if (customer != null)
    {
        <div class="row mb-4">
            <div class="col-12">
                <div class="card border-0 shadow-sm">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div class="avatar-circle bg-primary text-white me-3">
                                @GetInitials(customer.Name)
                            </div>
                            <div class="flex-grow-1">
                                <h5 class="mb-1">@customer.Name</h5>
                                <div class="text-muted small">
                                    <i class="bi bi-envelope me-1"></i>@customer.Email
                                    <span class="mx-2">•</span>
                                    <i class="bi bi-telephone me-1"></i>@customer.Phone
                                </div>
                                @if (!string.IsNullOrEmpty(customer.Notes))
                                {
                                    <div class="text-muted small mt-1">
                                        <i class="bi bi-info-circle me-1"></i>@customer.Notes
                                    </div>
                                }
                            </div>
                            @if (!string.IsNullOrEmpty(customer.VatNumber) ||
                                                    !string.IsNullOrEmpty(customer.CompanyRegistrationNumber))
                            {
                                <div class="text-end text-muted small">
                                    @if (!string.IsNullOrEmpty(customer.CompanyRegistrationNumber))
                                    {
                                        <div>Reg: @customer.CompanyRegistrationNumber</div>
                                    }
                                    @if (!string.IsNullOrEmpty(customer.VatNumber))
                                    {
                                        <div>VAT: @customer.VatNumber</div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Invoice Statistics -->
    <div class="row mb-4">
        <div class="col-lg-2 col-md-4 col-sm-6 mb-3">
            <div class="card bg-secondary text-white border-0 stats-card">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h3 class="mb-0">@customerInvoices.Count(i => i.Status == InvoiceStatus.Draft)</h3>
                            <p class="mb-0 small">Draft</p>
                        </div>
                        <i class="bi bi-file-earmark fs-1 opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-2 col-md-4 col-sm-6 mb-3">
            <div class="card bg-primary text-white border-0 stats-card">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h3 class="mb-0">@customerInvoices.Count(i => i.Status == InvoiceStatus.Sent)</h3>
                            <p class="mb-0 small">Sent</p>
                        </div>
                        <i class="bi bi-send fs-1 opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-2 col-md-4 col-sm-6 mb-3">
            <div class="card bg-success text-white border-0 stats-card">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h3 class="mb-0">@customerInvoices.Count(i => i.Status == InvoiceStatus.Paid)</h3>
                            <p class="mb-0 small">Paid</p>
                        </div>
                        <i class="bi bi-check-circle fs-1 opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-2 col-md-4 col-sm-6 mb-3">
            <div class="card bg-danger text-white border-0 stats-card">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h3 class="mb-0">@customerInvoices.Count(i => i.Status == InvoiceStatus.Overdue)</h3>
                            <p class="mb-0 small">Overdue</p>
                        </div>
                        <i class="bi bi-exclamation-triangle fs-1 opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-2 col-md-4 col-sm-6 mb-3">
            <div class="card bg-info text-white border-0 stats-card">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h3 class="mb-0">@customerInvoices.Count</h3>
                            <p class="mb-0 small">Total</p>
                        </div>
                        <i class="bi bi-receipt fs-1 opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-2 col-md-4 col-sm-6 mb-3">
            <div class="card bg-warning text-white border-0 stats-card">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h3 class="mb-0">£@totalOutstanding.ToString("N0")</h3>
                            <p class="mb-0 small">Outstanding</p>
                        </div>
                        <i class="bi bi-currency-pound fs-1 opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filter Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="row g-3 align-items-end">
                        <div class="col-md-3">
                            <label class="form-label small text-muted">Search Invoices</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-search"></i></span>
                                <input type="text" class="form-control" @bind="searchTerm" @bind:after="FilterInvoices"
                                    placeholder="Search by invoice number...">
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label small text-muted">Status</label>
                            <select class="form-select" @bind="statusFilter" @bind:after="FilterInvoices">
                                <option value="">All Statuses</option>
                                <option value="Draft">Draft</option>
                                <option value="Sent">Sent</option>
                                <option value="Paid">Paid</option>
                                <option value="Overdue">Overdue</option>
                                <option value="Cancelled">Cancelled</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label small text-muted">Date Range</label>
                            <select class="form-select" @bind="dateFilter" @bind:after="FilterInvoices">
                                <option value="all">All Time</option>
                                <option value="thisWeek">This Week</option>
                                <option value="thisMonth">This Month</option>
                                <option value="lastMonth">Last Month</option>
                                <option value="thisYear">This Year</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label small text-muted">Sort By</label>
                            <select class="form-select" @bind="sortBy" @bind:after="FilterInvoices">
                                <option value="created">Created Date</option>
                                <option value="due">Due Date</option>
                                <option value="number">Invoice Number</option>
                                <option value="total">Total Amount</option>
                            </select>
                        </div>
                        <div class="col-md-1">
                            <div class="d-flex justify-content-end align-items-center">
                                <div class="btn-group" role="group">
                                    <input type="radio" class="btn-check" name="viewMode" id="gridView"
                                        checked="@(viewMode == "grid")" @onchange="@(() => SetViewMode("grid"))">
                                    <label class="btn btn-outline-secondary" for="gridView">
                                        <i class="bi bi-grid-3x3-gap"></i>
                                    </label>

                                    <input type="radio" class="btn-check" name="viewMode" id="listView"
                                        checked="@(viewMode == "list")" @onchange="@(() => SetViewMode("list"))">
                                    <label class="btn btn-outline-secondary" for="listView">
                                        <i class="bi bi-list"></i>
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-12">
                            <small class="text-muted">
                                Showing @filteredInvoices.Count() of @customerInvoices.Count invoices
                                @if (filteredInvoices.Any())
                                {
                                    <span class="ms-2">• Total: £@filteredInvoices.Sum(i => i.Total).ToString("N2")</span>
                                }
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Invoice List/Grid -->
    @if (isLoading)
    {
        <div class="d-flex justify-content-center py-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger" role="alert">
            <i class="bi bi-exclamation-triangle me-2"></i>
            @errorMessage
        </div>
    }
    else if (!filteredInvoices.Any())
    {
        <div class="text-center py-5 empty-state">
            <i class="bi bi-receipt text-muted" style="font-size: 4rem;"></i>
            <h4 class="text-muted mt-3">
                @if (customerInvoices.Any())
                {
                    <span>No invoices match your filters</span>
                }
                else
                {
                    <span>No invoices found for this customer</span>
                }
            </h4>
            <p class="text-muted">
                @if (customerInvoices.Any())
                {
                    <span>Try adjusting your search or filter criteria</span>
                }
                else
                {
                    <span>Create the first invoice for @customerName</span>
                }
            </p>
            @if (!customerInvoices.Any())
            {
                <a href="/customer/@CustomerId/invoice/new" class="btn btn-primary mt-2">
                    <i class="bi bi-plus-lg me-1"></i>
                    Create First Invoice
                </a>
            }
        </div>
    }
    else if (viewMode == "grid")
    {
        <div class="row">
            @foreach (var invoice in filteredInvoices)
            {
                <div class="col-xl-4 col-lg-6 col-md-6 mb-4">
                    <InvoiceCard Invoice="invoice" OnView="HandleViewInvoice" OnEdit="HandleEditInvoice"
                        OnMarkAsSent="HandleMarkAsSent" OnMarkAsPaid="HandleMarkAsPaid" OnCancel="HandleCancelInvoice" />
                </div>
            }
        </div>
    }
    else
    {
        <div class="card border-0 shadow-sm">
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>Invoice</th>
                                <th>Created</th>
                                <th>Due Date</th>
                                <th>Status</th>
                                <th class="text-end">Amount</th>
                                <th class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var invoice in filteredInvoices)
                            {
                                <tr>
                                    <td>
                                        <div>@invoice.CreatedDate.ToString("dd/MM/yyyy")</div>
                                        <small class="text-muted">@invoice.CreatedDate.ToString("HH:mm")</small>
                                    </td>
                                    <td>
                                        <div class="@(invoice.IsOverdue ? "text-danger fw-bold" : "")">
                                            @invoice.DueDate.ToString("dd/MM/yyyy")
                                        </div>
                                        <small class="text-muted">@invoice.DueDateDisplay</small>
                                    </td>
                                    <td>
                                        <span class="badge @invoice.StatusBadgeClass">
                                            <i class="@invoice.StatusIcon me-1"></i>
                                            @invoice.Status
                                        </span>
                                    </td>
                                    <td class="text-end">
                                        <div class="fw-bold">£@invoice.Total.ToString("N2")</div>
                                        <small class="text-muted">@invoice.VatRate% VAT</small>
                                    </td>
                                    <td class="text-center">
                                        <div class="btn-group btn-group-sm">
                                            <button class="btn btn-outline-primary" @onclick="() => HandleViewInvoice(invoice)"
                                                title="View Invoice">
                                                <i class="bi bi-eye"></i>
                                            </button>
                                            @if (invoice.Status == InvoiceStatus.Draft)
                                            {
                                                <button class="btn btn-outline-secondary"
                                                    @onclick="() => HandleEditInvoice(invoice)" title="Edit Invoice">
                                                    <i class="bi bi-pencil"></i>
                                                </button>
                                                <button class="btn btn-outline-success" @onclick="() => HandleMarkAsSent(invoice)"
                                                    title="Mark as Sent">
                                                    <i class="bi bi-send"></i>
                                                </button>
                                            }
                                            else if (invoice.Status == InvoiceStatus.Sent)
                                            {
                                                <button class="btn btn-outline-success" @onclick="() => HandleMarkAsPaid(invoice)"
                                                    title="Mark as Paid">
                                                    <i class="bi bi-check"></i>
                                                </button>
                                            }
                                            <div class="dropdown">
                                                <button class="btn btn-outline-secondary dropdown-toggle" type="button"
                                                    data-bs-toggle="dropdown">
                                                    <i class="bi bi-three-dots"></i>
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li><button class="dropdown-item"
                                                            @onclick="() => HandleViewInvoice(invoice)">
                                                            <i class="bi bi-eye me-2"></i>View Details
                                                        </button></li>
                                                    @if (invoice.Status == InvoiceStatus.Draft)
                                                    {
                                                        <li><button class="dropdown-item"
                                                                @onclick="() => HandleEditInvoice(invoice)">
                                                                <i class="bi bi-pencil me-2"></i>Edit Invoice
                                                            </button></li>
                                                        <li>
                                                            <hr class="dropdown-divider">
                                                        </li>
                                                        <li><button class="dropdown-item text-danger"
                                                                @onclick="() => HandleCancelInvoice(invoice)">
                                                                <i class="bi bi-x-circle me-2"></i>Cancel Invoice
                                                            </button></li>
                                                    }
                                                </ul>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>